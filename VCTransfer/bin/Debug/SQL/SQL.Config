<?xml version="1.0" encoding="utf-8" ?>
<SQLDefines>
  <SQL name="getProductList">
    Select * from Product Where PartNumber is not null
  </SQL>
  <SQL name="updateProductEstUnit">
    Update Product Set EstUnits={1} Where ProductID={0}
  </SQL>
  <SQL name="getDownloadOrderList">

    update Address set stateid=state.StateId
    from Address
    inner join state on StateCode=state.Code
    where isnull(Address.StateId,0)=0


    Select DISTINCT
    o.orderid AS OrderId, o.AltOrderNum as AltOrderNum,
    1 AS release_num,
    a.[Company] AS b_company, a.address1 AS b_address1,
    a.[Address2] AS b_address2,
    a.[Address3] AS b_address3, a.[City] AS b_city, state.[Code] AS b_state, a.[PostalCode] AS b_zip,
    country.[ISO2] AS b_country,  c.[FirstName] AS B_FIRSTNAME, c.[LastName] AS B_LASTNAME, a.[PhoneNumber] AS b_phone,c.Email as b_email,

    da.[Company] AS d_company, da.address1 AS d_address1,
    da.[Address2] AS d_address2,
    da.[Address3] AS d_address3, da.[City] AS d_city, dstate.[Code] AS d_state, da.[PostalCode] AS d_zip,
    dcountry.[ISO2] AS d_country,  d.[FirstName] AS D_FIRSTNAME, d.[LastName] AS D_LASTNAME, da.[PhoneNumber] AS d_phone,d.Email as d_email,

    o.[OrderDate] AS date_ordered,
    c.[customerId] AS cust_id, o.[TotalOrderAmount] AS TotalOrderAmount,
    isnull(o.[TotalShipping],0) + isnull(o.[TotalHandling],0) AS TotalShipping,
    o.[TotalTax] AS TotalTax,Party.PartyCode
    from (
    select distinct o2.orderid, o2.altordernum, o2.programid, o2.ordertypeid, o2.customerid,
    o2.customeraddressid, o2.orderdate, o2.totaltax, o2.totalshipping,o2.ShipToAddressId,
    o2.totalhandling, o2.totalorderamount, o2.statuscode, o2.releasedate,o2.PartyId,o2.DesignerId
    from [order] o2 with (nolock)
    inner join order_line_item oli2 with (nolock) on o2.orderid = oli2.orderid
    where oli2.releasedate is null and oli2.ReleaseNumber is null  and o2.statuscode = 'AS'  and oli2.StatusCode is null
    ) o
    INNER JOIN customer   c with (nolock) ON o.[CustomerId] = c.[CustomerId]
    INNER JOIN address  a with (nolock) ON o.CustomerAddressId = a.[AddressId]
    LEFT JOIN [State] state  with (nolock)  ON a.[StateId] = state.[StateId]
    INNER JOIN country  country with (nolock) ON a.[CountryId] = country.[CountryId]

    INNER JOIN customer d WITH(NOLOCK) ON o.DesignerId=d.CustomerId
    LEFT JOIN address  da with (nolock) ON d.DefaultBillingAddressId = da.[AddressId]
    LEFT JOIN [State] dstate  with (nolock)  ON da.[StateId] = dstate.[StateId]
    LEFT JOIN country  dcountry with (nolock) ON da.[CountryId] = dcountry.[CountryId]

    LEFT JOIN dbo.Party ON Party.PartyId = o.PartyId
  </SQL>
  <SQL name="getOrderLineByOrderId">
    SELECT  distinct s.[Code] as ShipMethod,ShipCarrier.Code AS ShipCarrier,
    sa.AddressId as S_addressId,
    sa.[Company] AS s_company, sa.[Address1] AS s_address1, sa.[Address2] AS s_address2,
    sa.[Address3] AS s_address3, sa.[City] AS s_city, sstate.[Code] AS s_state, sa.[PostalCode] AS s_zip,
    scountry.[ISO2] AS s_country, sa.[LastName] as S_LastNAME, sa.[FirstName] AS S_FIRSTNAME,
    sa.[PhoneNumber]  AS s_phone,sc.email as s_email,
    oli.[LineNum] AS order_line, oli.[PartNumber] AS PartNumber,  oli.[Quantity] AS Quantity,
    oli.[ActualPrice] AS price, Product.Phantom
    FROM order_line_item oli
    INNER JOIN customer  sc with (nolock)  ON oli.[ShipToCustomerId] = sc.[CustomerId]
    INNER JOIN address sa with (nolock)  ON oli.[ShipToAddressId] = sa.[AddressId]
    INNER JOIN state  sstate with (nolock)  ON sa.[StateId] = sstate.[StateId]
    INNER JOIN country scountry with (nolock)  ON sa.[CountryId] = scountry.[CountryId]
    INNER JOIN [ShipMethod]  s with (nolock)  ON oli.[ShipMethodId] = s.[ShipMethodId]
    INNER JOIN dbo.ShipCarrier ON ShipCarrier.ShipCarrierId = s.ShipCarrierId
    inner join Product on Product.PartNumber=oli.PartNumber
    WHERE (oli.statuscode  &lt;&gt;'cn' or oli.statuscode is null) and oli.releasedate is null  and oli.ReleaseNumber  is null
    and oli.orderId={0} 
    ORDER BY sa.AddressId

  </SQL>
  <SQL name="ReleaseOrderLineByOrderId">
    UPDATE dbo.Order_Line_Item SET ReleaseNumber=1,ReleaseDate=GETDATE(),StatusCode='WH' WHERE OrderId={0} and StatusCode is null and ReleaseDate is null
  </SQL>
  <SQL name="getShimentOrderList">
    SELECT DISTINCT [Order].* FROM [dbo].[Order]
    INNER JOIN dbo.Order_Line_Item ON Order_Line_Item.OrderId = [Order].OrderId
    WHERE Order_Line_Item.StatusCode='WH'

    
  </SQL>
  <SQL name="updateOrderLineItemShipment">
    Update Order_Line_Item
    set StatusCode = 'SH', ShippedDate = '{1}',
    TrackingNumber = '{2}',qtyshipped =Quantity,
    qtyshipnotinv = Quantity
    where orderid={0}
  </SQL>
  <SQL name="updateOrderStatusSH">

    ;WITH t1 AS (
    SELECT DISTINCT o.orderid,oli.quantity,oli.qtyshipped  From [order] o with (nolock)
    inner join order_line_item oli with (nolock)
    on o.orderid = oli.orderid
    where (o.statuscode = 'AS' or o.statuscode = 'ER') and oli.statuscode NOT IN  ('cn','si')
    and NOT EXISTS (SELECT * FROM order_line_item  with(nolock)
    WHERE orderid=o.orderid AND  statuscode = 'PK')
    and o.orderid not in
    (select distinct o.orderid From [order] o with(nolock)
    inner join order_line_item oli with (nolock)
    on o.orderid = oli.orderid
    where o.statuscode = 'AS' and oli.statuscode is null)
    )
    SELECT orderid INTO #order
    FROM t1
    group by orderid
    having sum(isnull(quantity,0)) = sum(isnull(qtyshipped,0))
    OPTION(LOOP JOIN)

    update [order]
    set statuscode = 'SH'
    FROM [order] INNER JOIN #order ON [order].orderid=#order.orderid

    DROP TABLE #order


  </SQL>
  <SQL name="createASN">
    insert into Order_Line_Shipment_ASN(ORDER_ID,RELEASE_NUM,ORDER_LINE,CARTON_ID_FROM,ITEM_ID,PIECES_TO_MOVE)
    select OrderId,1,LineNum,1,PartNumber,Quantity
    from Order_Line_Item
    where Order_Line_Item.OrderId={0}
  </SQL>
  
  
  
  
  
  <SQL name="getOrderById">
    SELECT top 1 oli.shippeddate, oli.TrackingNumber,o.*,OC.LastName,OC.firstName,oc.email,shipmethod.Name as SHName,ShipCarrier.TrackingURL,shipmethod.Name as ShipMethodName,ShipCarrier.Name as ShipCarrier
    FROM [Order] O  with (nolock)
    inner join Order_Line_Item oli with (nolock) on oli.orderid=o.orderid
    inner join shipmethod  with (nolock)  on shipmethod.shipmethodId=oli.shipmethodId
    inner join ShipCarrier on ShipCarrier.ShipCarrierId=shipmethod.ShipCarrierId
    LEFT OUTER JOIN Customer AS OC  with (nolock)  ON O.CustomerId = OC.CustomerId
    where O.orderId= {0} and  oli.shippeddate is not null
  </SQL>
  <SQL name="getEmailTemplate">
    SELECT *
    FROM Program_Email
    INNER JOIN [Type] ON EmailTypeId=TypeId AND Code='{0}'
  </SQL>
  <SQL name="getOrderDetailsByOrderId">
    SELECT Address1 as ShipToAddress,City as ShipToCity,PostalCode as ShipToZip,Address.StateCode as ShipToState,
    Order_Line_Item.*
    FROM Order_Line_Item
    inner join Address  ON AddressId=Order_Line_Item.ShipToAddressId
    Where OrderId={0}
  </SQL>
</SQLDefines>
